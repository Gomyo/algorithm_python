'''
7 11
0 1 32
0 2 31
0 5 60
0 6 51
1 2 21
2 6 25
2 4 46
3 4 34
3 5 18
4 5 40
4 6 51
'''

V, E = map(int, input().split())
INF = 1e9

#1. 가중치(간선)를 저장하는 인접행렬 생성

def prim(start_vertex):
    result = 0 #최소 신장 트리의 가중치 결과

    #2. 가중치 저장 배열 생성
    weight = [INF]*V
    weight[start_vertex] = 0

    #3. 방문 체크 배열 생성

    #4. 노드의 연결관계 배열 생성

    #5. 최소 가중치 탐색&결과값에 더하는 반복문
        #5-1. 방문하지 않았고 가중치가 최소인 경우를 탐색하여 최소key의 가중치 찾기

    #6. 최소 가중치 값 연산, 방문 체크

    #7. 선택한 정점의 인접 정점의 가중치를 최단 가중치로 업데이트
        #7-1. 현재의 정점과 연결되어 있고, 아직 방문하지 않았을 경우,
        # 현재 vertex와 이어진 간선 값이 최단이므로 업데이트

    return result

print(prim())